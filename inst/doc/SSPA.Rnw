\documentclass[a4paper,10pt,english]{scrartcl}
\usepackage[T1]{fontenc}
\usepackage[latin9]{inputenc}
\usepackage{nicefrac}
\usepackage{babel}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Textclass specific LaTeX commands.
\usepackage[nogin]{Sweave}
\newcommand{\Rcode}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rcommand}[1]{{\texttt{#1}}}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Rfunarg}[1]{{\textit{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rmethod}[1]{{\textit{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}

%%Sweave customisation as suggested by Ross Ihaka
\DefineVerbatimEnvironment{Sinput}{Verbatim} {xleftmargin=2em}
\DefineVerbatimEnvironment{Soutput}{Verbatim}{xleftmargin=2em}
\DefineVerbatimEnvironment{Scode}{Verbatim}{xleftmargin=2em}
\fvset{listparameters={\setlength{\topsep}{0pt}}}
\renewenvironment{Schunk}{\vspace{\topsep}}{\vspace{\topsep}}

\SweaveOpts{width=5,height=4}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
%\VignetteIndexEntry{SSPA vignette}
%\VignetteKeywords{pilotData, sampleSize}
%\VignettePackage{SSPA}
%\VignetteDepends{SSPA, multtest}


\begin{document}

\title{Sample Size and Power Analysis for Microarray Studies}

\author{Maarten van Iterson and Ren{\'e}e de Menezes\\
Center for Human and Clinical Genetics,\\
 Leiden University Medical Center, The Netherlands\\
Package \texttt{SSPA}, version \Sexpr{packageVersion("SSPA")}\\
}

\maketitle
\tableofcontents{}


\section{Introduction}

This document shows the functionality of the R-package \texttt{SSPA}. The package performs power and sample size analysis using a method described by \cite{Ferreira2006a,Ferreira2006b}. Our implementation allows for fast and realistic estimates of power and sample size for microarray experiments, given pilot data. By means of two simple commands (\texttt{pilotData(), sampleSize()}), a researcher can read their data in and compute the desired estimates. Other functions are provided to facilitate interpretation of results. 

Given a set of test statistics from the pilot data, the knowledge of their distribution under the null hypothesis and the sample size used to compute them, the method estimates the power for a given false discovery rate. The multiple testing problem is controlled through the adaptive version of the Benjamini and Hochberg method \cite{Benjamini1995}. For more details about the implementation and method we refer to \cite{Ferreira2006a,Ferreira2006b}. In \cite{Iterson2009} we describe two biological case studies using the package \texttt{SSPA}.

For comparison we implement the power and sample size estimation method proposed by Ruppert \cite{Ruppert2007} which uses a different estimation approach. Two additional packages need to be installed for using this method namely \texttt{quadprog} and \texttt{splines}. 

<<options, echo=FALSE>>= 
options(width=60)
@

\section{Basic Example}

We demonstrate the functionality of the package by using preprocessed gene expression data from the leukemia ALL/AML study of \cite{Golub1999} as provided by \texttt{multtest} package. To load the leukemia dataset, use \texttt{data(golub)} for a short description of the experiment and data use \texttt{?golub}.

<<basic-example-load-data>>=
library(multtest)
data(golub)  
@

The required input for the sample size and power analysis is a vector of test-statistics and the effective sample sizes. The test-statistics are obtained by a differential gene expression analysis using one of the available packages like \texttt{limma, maanova, multtest} (it is also possible to import the vector of test-statistics in \texttt{R} if they are calculated using another software package). Here we will use the function \texttt{mt.teststat} from the \texttt{multtest} package to obtain a vector of test-statistics from the leukemia data. 
The effective sample size for a two-group experiment is given by:
\begin{equation}
N = \left(\frac{1}{n_A} + \frac{1}{n_B}\right)^{-1},
\end{equation} 
where $n_A$ is the sample size of one group and $n_B$ the other.

<<basic-example-multipletesting>>=
tst <- mt.teststat(golub, golub.cl) 
X <- model.matrix(~golub.cl)
effectivesamplesize <- 1/solve(crossprod(X))[2,2]
@

The first step in performing the sample size and power analysis is creating a object of class \texttt{PilotData} which will contain all the necessary information needed for the following power and sample size analysis. A user-friendly interface for creating an object of \texttt{PilotData} is available as \texttt{pilotData()}. 

<<basic-example-construct-pilotdata>>=
library(SSPA)
pd <- pilotData(statistics=tst, effectivesamplesize=effectivesamplesize)
@

Several ways of viewing the content of the \texttt{PilotData} object are possible either graphically or using a \texttt{show}-method by just typing the name of the created object of \texttt{PilotData}:

<<basic-example-view-pilotdata>>=
pd
@

By using \texttt{plot(pd)} several diagnostic plots are produced. 
%
\begin{figure}
\centering
<<basic-example-plot-pilotdata, fig=TRUE>>=
print(plot(pd))
@
\label{basic-example-plot-pilotdata}
\caption{Diagnostic plots of the pilot-data: Upper-left panel show a histogram of the test statistics, upper right the corresponding histogram of p-values. The lower left-panel shows a quantile-quantile plot for the test statistics and in the lower right-panel the order p-values are plotted against their ranks. In this example a large effect is visual.}
\end{figure}

Next we create an object of class \texttt{SampleSize} which will perform the estimation of the proportion of non-differentially expressed genes and the density of effect sizes. Several options are available see \texttt{?sampleSize}. The default method for estimation of the proportion of non-differentially expressed genes is the method proposed by \cite{Langaas2005} as implemented by \texttt{convest()} function from the package \texttt{limma}. Additionally the method by \cite{Storey2002} and \cite{Ferreira2006b} are available, also a user-defined proportion is possible. Again a generic \texttt{show}-method is implemented as well.

<<basic-example-construct-samplesize>>=
ss <- sampleSize(pd)
ss
@

The density of effect size can be shown by a call to \texttt{plot()}. When there are both up- and down-regulated genes a bimodal density is observed.  

%
\begin{figure}
\centering
<<basic-example-plot-effectsizes, fig=TRUE>>=
print(plot(ss))
@
\label{basic-example-plot-effectsizes}
\caption{Density of effect-sizes:}
\end{figure}

Estimation of the average power for other sample sizes then that of the pilot-data can be performed with the \texttt{power()}-function. The user can also give desired false discovery rate level or possible multiple false discovery rate levels as a vector.

%
\begin{figure}
\centering
<<basic-example-power, fig=TRUE>>=
1/(1/27 + 1/11)
1/(1/27 + 1/seq(11,27,2))
pwr <- power(ss, plot = FALSE, effectivesamplesizes = 1/(1/27 + 1/seq(11,27,2)), fdr=c(0.01, 0.05)) 
matplot(seq(11, 27,2), pwr, type = "b", pch=1, ylim=c(0, 1), ylab = "Power", xlab = "Sample size")
grid()
legend("bottomright", colnames(pwr), col=c(1:ncol(pwr)), pch=1, lty=1)
@
\label{basic-example-power}
\caption{Estimated average power for different sample sizes and FDR-levels: The sample size of one group was fixed at 27, the pilot data sample size and the other was increased from 11 (pilot data sample size) to 27.}
\end{figure}

\newpage

\section{Compare multiple experiments}

Relative power and sample size analysis is useful when multiple experiments can be compared e.g. using different treatments or exposure times. The following example is described in more detail in \cite{Iterson2009}. In this experiment the outcome of specific PPAR-alpha activation on murine small intestinal gene expression was examined using Affymetrix GeneChip Mouse 430 2.0 arrays. PPAR-alpha was activated by several PPAR-alpha-agonists that differed in activating potency. In this paper the data of three agonists were used, namely Wy14,643, fenofibrate and trilinolenin (C18:3). The first two compounds belong to the fibrate class of drugs that are widely prescribed to treat dyslipidemia, whereas trilinolenin is an agonist frequently found in the human diet. For intestinal PPAR-alpha, Wy14,643 is the most potent agonist followed by C18:3 and fenofibrate. Since time of exposure also affects the effect size, intestines were collected 6 hrs (all three agonists) or 5  days (Wy14,643 and fenofibrate only) after exposure.
The data is available from the \Rpackage{SSPA}-package using \Rcode{data(Nutrigenomics)} and represents the test statistics for the five experimental conditionals. The first row of the data-matrix contains the effective sample sizes. In order to construct a \texttt{PilotData} object we use the \Rfunction{apply}-family of function for convinience. Here we use the normal distributional assumption and Storey's method to estimated the proportion of nondifferentially expressed genes because these methods are the fastest.

<<nutrigenomics>>=
data(Nutrigenomics)
str(Nutrigenomics)
pd <- apply(Nutrigenomics, 2, function(x) pilotData(statistics=x[-1], effectivesamplesize=x[1], distribution="Normal"))	                
ss <- lapply(pd, sampleSize, method="Storey")	
@

We could use the \Rfunction{plot} to view the density of effectsizes of each set of test statistics but it would be more informative to use view them together in one plot e.g. using the \Rpackage{lattice} function \Rfunction{xyplot}.

\begin{figure}
\centering
<<nutrigenomics-effectsize, fig=TRUE>>=
library(lattice)
effectsize <- data.frame(exposure = factor(rep(rep(c("5 Days", "6 Hours"), c(2, 3)), each=1024)),
                         compound = factor(rep(c("Wy14,643", "fenofibrate", "trilinolenin (C18:3)", "Wy14,643", "fenofibrate"), each=1024)),
                         lambda  = as.vector(sapply(ss, lambda)),
                         theta  = as.vector(sapply(ss, theta)))

print(xyplot(lambda~theta|exposure, group=compound, data=effectsize, type=c("g", "l"), layout=c(1,2), lwd=2, 
       xlab="effect size", ylab="", auto.key=list(columns=3, lines=TRUE, points=FALSE, cex=0.7)))
@
\label{nutrigenomics-effectsize}
\caption{Density of effect size of the five sets of test statistics.}
\end{figure}

The sample sizes of these experiments were in the range of 4 to 5 per group with not all experiments balanced. What would be the average power gain using 10 sample per group? The following code answers this question again for all experiments together.

\begin{figure}
\centering
<<nutrigenomics-power, fig=TRUE>>=
samplesize <- 2*seq(2, 8)
averagepower <- data.frame(power = as.vector(sapply(ss, function(x) as.numeric(power(x, effectivesamplesize=samplesize/2, fdr=0.1)[,1]))),
                           exposure = factor(rep(rep(c("5 Days", "6 Hours"), c(2, 3)), each=length(samplesize))),
                           compound = factor(rep(c("Wy14,643", "fenofibrate", "trilinolenin (C18:3)", "Wy14,643", "fenofibrate"), each=length(samplesize))),
                           samplesize = rep(samplesize, 5))

print(xyplot(power~samplesize|exposure, group=compound, data=averagepower, type=c("g", "b"), layout=c(1,2), lwd=2, pch=16,
       xlab="sample size (per group)", ylab="", auto.key=list(columns=3, lines=TRUE, points=FALSE, cex=0.7)))
@
\label{nutrigenomics-power}
\caption{Power curves for the five experiments.}
\end{figure}

\newpage

\section{Using \Rpackage{SSPA} in combination with \Rpackage{limma}}

\Rpackage{limma} is a frequently used package for differential expression analysis of microarray experiments. Here we will show how \Rpackage{SSPA} can be used with the results from \Rpackage{limma}.

First obtain \Rpackage{limma} fit of the data. Here we will use the swirl example data from \Rpackage{marray} which is also extensively described in the \Rpackage{limma} useguide.
<<limma-fit>>=
library(marray)
data(swirl)
library(convert)
library(limma)
swirl <- as(swirl, "RGList")
MA <- normalizeWithinArrays(swirl) #print tip loess
design <- c(-1,1,-1,1)
fit <- lmFit(MA, design)
ordinary.t <- fit$coef/fit$stdev.unscaled/fit$sigma
fitModerated <- eBayes(fit)
@

Now we load the \Rpackage{SSPA}-package and create two \Rclass{pilotData}-objects, one for the ordinary $t$ test-statistics and one for the moderated $t$ test-statistics with the appropriate degrees of freedom and effective sample size. Futher information on the moderated test statistics can be found in \cite{Wright2003,Menezes2004}.

<<limma-construct-pilotdata>>=
library(SSPA)
effectivesamplesize <- 1/solve(crossprod(design))[1,1]
nu <- fit$df.residual[1] 
nu0 <- fitModerated$df.prior
pd <- pilotData(statistics = ordinary.t[,1], effectivesamplesize=effectivesamplesize, dof=nu, distribution = "Student")
pdMod <- pilotData(statistics = fitModerated$t[,1], effectivesamplesize=effectivesamplesize, dof= nu + nu0, distribution = "Student")
@

The data comes from a dye-swap experiment with four microarrays, thus for each RNA source we have two biological and two technical replicates. Because this is an dye-swap experiment we can estimate the difference between the biological sources, leaving three degrees of freedom for estimation of the error.

The \Rcode{pdMod}-object has a moderated degrees of freedom, the moderated Student $t$-distribution will be used for the analysis. The effective sample size was defined by: $N = (\nicefrac{1}{n_X}+\nicefrac{1}{n_Y})^{-1}$, thus with both four samples gives two. 

<<limma-construct-samplesize>>=
ss <- sampleSize(pd)
ssMod <- sampleSize(pdMod)
@


\begin{figure}
\centering
<<limma-plot-effectsizes, fig=TRUE>>=
library(lattice)
data <- data.frame(theta = rep(theta(ss), 2), lambda = c(lambda(ss), lambda(ssMod)), 
                   statistic=rep(c("original", "moderated"), each=length(theta(ss))))
print(xyplot(lambda~theta, group=statistic, data, type=c("g", "l"), 
             xlab="effect size", ylab="", auto.key=list(columns=2, points=FALSE, lines=TRUE)))
@
\label{limma-plot-effectsizes}
\caption{Density of effect size for moderated and orginal $t$ test-statistics.}
\end{figure}

Again estimation of the average power for other sample sizes then that of the pilot-data can be performed using:

\begin{figure}
\centering
<<limma-plot-power, fig=TRUE, eval=FALSE>>=
samplesizes <- 2*c(4, 8, 16)
pwr <- power(ss, plot = FALSE, effectivesamplesizes = samplesizes/2, fdr=0.1)
pwrMod <- power(ssMod, plot = FALSE, effectivesamplesizes = samplesizes/2, fdr=0.1)
averagepower <- data.frame(power = c(pwr, pwrMod),
                           statistics = rep(c("original", "moderated"), each=3),
                           samplesizes = rep(samplesizes, 2))
print(xyplot(power~samplesizes, group=statistics, data=averagepower, type=c("g", "b"), lwd=2, pch=16,
       xlab="sample size (per group)", ylab="", auto.key=list(columns=2, lines=TRUE, points=FALSE)))
@
\label{limma-plot-power}
\caption{Estimated average power for other sample sizes then that of the pilot-data for both moderated and orginal $t$ test-statistics and for different false discovery rate thresholds.}
\end{figure}

For small sample sizes the moderated test-statistics has higher power for larger sample sizes both statistics converge to eachother, as expected.

\section{Additional functionality}

\subsection{Ferreira's $\pi_{0}$ estimate}

Ferreira \textit{et al.} propose a semi-parametric method to estimate the proportion of non-differentially expressed genes\cite{Ferreira2006a,Ferreira2006b}. 

<<ferreira, eval=FALSE>>=
ss <- sampleSize(pd, method="Ferreira", pi0=seq(0.05, 0.5, 0.05), doplot=TRUE)
@

\subsection{Rupperts estimation method}

For using the method proposed by Ruppert \cite{Ruppert2007} two additional packages need to be installed for using this method namely \texttt{quadprog} and \texttt{splines}. Both $\pi_{0}$ and the density of effect sizes is estimated by Ruppert's method.

<<ruppert, eval=FALSE>>=
ss <- sampleSize(pd, method="Ruppert", nKnots = 11, bDegree = 3)
@


\section{Details}

This document was written using:

<<echo=FALSE,results=tex>>=
toLatex(sessionInfo())
@

\bibliographystyle{unsrt}
\bibliography{SSPA}

\end{document}
